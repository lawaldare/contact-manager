{"ast":null,"code":"var _jsxFileName = \"/Users/lawaldare/Movies/Tutorials/Brad Traversy/React Front To Back/Section 8 - Learning Redux/2 - Setting Up The Redux Starting Point/contactmanager_redux/src/components/contacts/Contacts.js\";\nimport React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getContacts } from '../../actions/contactActions';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const contacts = this.props.contacts;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Contact\"), \" List\"), contacts.map(contact => React.createElement(Contact, {\n      key: contact.id,\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })));\n  }\n\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts\n});\n\nexport default connect(mapStateToProps, {\n  getContacts\n})(Contacts);","map":{"version":3,"sources":["/Users/lawaldare/Movies/Tutorials/Brad Traversy/React Front To Back/Section 8 - Learning Redux/2 - Setting Up The Redux Starting Point/contactmanager_redux/src/components/contacts/Contacts.js"],"names":["React","Component","Contact","connect","PropTypes","getContacts","Contacts","componentDidMount","props","render","contacts","map","contact","id","propTypes","array","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,WAAX;AACD;;AACDI,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKF,KADnB,CACCE,QADD;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,UADF,EAIGA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IACnB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,MAAA,OAAO,EAAED,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADF;AAUD;;AAhB8B;;AAmBjCN,QAAQ,CAACQ,SAAT,GAAqB;AACnBJ,EAAAA,QAAQ,EAAEN,SAAS,CAACW,KAAV,CAAgBC,UADP;AAEnBX,EAAAA,WAAW,EAAED,SAAS,CAACa,IAAV,CAAeD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,QAAQ,EAAES,KAAK,CAACP,OAAN,CAAcF;AADQ,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CACpBe,eADoB,EAEpB;AAAEb,EAAAA;AAAF,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getContacts } from '../../actions/contactActions';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts\n});\n\nexport default connect(\n  mapStateToProps,\n  { getContacts }\n)(Contacts);\n"]},"metadata":{},"sourceType":"module"}