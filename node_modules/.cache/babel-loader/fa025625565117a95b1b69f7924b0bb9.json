{"ast":null,"code":"import _objectSpread from \"/Users/lawaldare/Movies/Tutorials/Brad Traversy/React Front To Back/Section 8 - Learning Redux/2 - Setting Up The Redux Starting Point/contactmanager_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT } from '../actions/types';\nconst initialState = {\n  contacts: [{\n    id: 1,\n    name: 'John Doe',\n    email: 'john@gmail.com',\n    phone: '555-555-5555'\n  }, {\n    id: 2,\n    name: 'Karen Williams',\n    email: 'karen@gmail.com',\n    phone: '444-444-4444'\n  }, {\n    id: 3,\n    name: 'Henry Johnson',\n    email: 'henry@gmail.com',\n    phone: '333-333-333'\n  }]\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state);\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(c => c.id !== action.payload)\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [action.payload, ...state.contacts]\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/lawaldare/Movies/Tutorials/Brad Traversy/React Front To Back/Section 8 - Learning Redux/2 - Setting Up The Redux Starting Point/contactmanager_redux/src/reducers/contactReducer.js"],"names":["GET_CONTACTS","DELETE_CONTACT","ADD_CONTACT","initialState","contacts","id","name","email","phone","state","action","type","filter","c","payload"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,WAAvC,QAA0D,kBAA1D;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,KAAK,EAAE,gBAHT;AAIEC,IAAAA,KAAK,EAAE;AAJT,GADQ,EAOR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,KAAK,EAAE,iBAHT;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAPQ,EAaR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,KAAK,EAAE,iBAHT;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAbQ;AADS,CAArB;AAuBA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,+BACKS,KADL;;AAGF,SAAKR,cAAL;AACE,+BACKQ,KADL;AAEEL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeQ,MAAf,CAAsBC,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASK,MAAM,CAACI,OAA3C;AAFZ;;AAIF,SAAKZ,WAAL;AACE,+BACKO,KADL;AAEEL,QAAAA,QAAQ,EAAE,CAACM,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACL,QAA1B;AAFZ;;AAIF;AACE,aAAOK,KAAP;AAhBJ;AAkBD","sourcesContent":["import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT } from '../actions/types';\n\nconst initialState = {\n  contacts: [\n    {\n      id: 1,\n      name: 'John Doe',\n      email: 'john@gmail.com',\n      phone: '555-555-5555'\n    },\n    {\n      id: 2,\n      name: 'Karen Williams',\n      email: 'karen@gmail.com',\n      phone: '444-444-4444'\n    },\n    {\n      id: 3,\n      name: 'Henry Johnson',\n      email: 'henry@gmail.com',\n      phone: '333-333-333'\n    }\n  ]\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(c => c.id !== action.payload)\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}